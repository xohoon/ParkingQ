<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing 
      infrastructure -->

   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/local_img/**" location="https://xn--9o7bnhu7d.kr/upload/" />
	

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean
      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>


	<context:component-scan base-package="kr.parkingq.controller" />

   <!-- interceptor setting -->
   <!-- <beans:bean id="sampleInterceptor" class="org.zerock.interceptor.SampleInterceptor"> 
      </beans:bean> <interceptors> <interceptor> <mapping path="/user/loginPost" 
      /> <beans:ref bean="loginInterceptor" /> </interceptor> </interceptors> -->

   <!-- Tiles Setting -->
   <beans:bean id="tilesConfigurer"
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>

   <beans:bean id="tilesViewResolver"
      class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass"
         value="org.springframework.web.servlet.view.tiles3.TilesView" />
      <beans:property name="order" value="1" />
   </beans:bean>

   <beans:bean id="viewResolver"
      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2" />
   </beans:bean>
   
   
   <!-- 멀티파트 리졸버 -->
   <beans:bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 최대업로드 가능한 바이트크기 -->
      <beans:property name="maxUploadSize" value="52428800" />
      <!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
      <!-- property name="maxInMemorySize" value="52428800" / -->
      <!-- defaultEncoding -->
      <beans:property name="defaultEncoding" value="utf-8" />
   </beans:bean>
   

   <!-- WebSocket -->
   <!-- <websocket:handlers> <websocket:mapping handler="echoHandler" path="/echo"/> 
      <websocket:handshake-interceptors> <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/> 
      </websocket:handshake-interceptors> <websocket:sockjs/> </websocket:handlers> -->

</beans:beans>